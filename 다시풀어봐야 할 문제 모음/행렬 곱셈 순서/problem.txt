문제 출처 : https://www.acmicpc.net/problem/11049
난이도 : 상

파일합치기와 똑같은 문제이다.

dp[i][j] : i~j까지 행렬 곱 했을 때 최소 곱의 횟수 라고 정의하면
dp[i][j] = min(dp[i][k] + dp[k+1][j] + arr[i][0]*arr[k][1]*arr[j][1]) 
식으로 구할 수 있다.(solution1(fialied))

하지만 이것만 구현 했을 때 시간초과 문제가 발생한다.
시간 초과 문제를 해결하려면 pypy로 제출하면된다.

파일 합치기와 같이 knuth optimization(크누스 최적화)를 적용하고 싶지만 
크누스 최적화는 arr[i][0]*arr[k][1]*arr[j][1] 식이 사각부등식과 단조성을 만족해야만 크누스 최적화를 적용할 수 있다.
하지만 이 식은 단조성을 위배 ; 구간에 따라 최적 분할점이 일관되게 증가하거나 유지되지 않습니다.
따라서 크누스 최적화를 적용할 수 없다.